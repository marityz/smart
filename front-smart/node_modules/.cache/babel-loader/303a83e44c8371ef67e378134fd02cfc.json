{"ast":null,"code":"import React from 'react';\nimport defaultDataMainApi from '../../const/const-api';\n\nclass Api {\n  constructor() {\n    this.getItem = params => {\n      const apiUrl = this.generateQueryString(params);\n      return fetch(`${defaultDataMainApi.url}?${apiUrl}`, {\n        method: \"GET\",\n        credentials: 'include'\n      }).then(res => this._returnJson(res));\n    };\n\n    this.generateQueryString = params => {\n      let searchParams = new URLSearchParams();\n\n      for (let keyParam in params) {\n        if (keyParam === \"params\") {\n          for (let key in params[keyParam]) {\n            searchParams.set(\"params.\" + key, params[keyParam][key]);\n          }\n        } else {\n          searchParams.set(keyParam, params[keyParam]);\n        }\n      }\n\n      return searchParams.toString();\n    };\n\n    this.createItem = saveData => {\n      return fetch(defaultDataMainApi.url, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: defaultDataMainApi.headers,\n        body: JSON.stringify({\n          name: saveData.name,\n          description: saveData.description,\n          params: saveData.params\n        })\n      }).then(res => this._returnJson(res));\n    };\n\n    this._returnJson = res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    };\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/Users/marina/Desktop/smart/front-smart/src/components/Api/Api.js"],"names":["React","defaultDataMainApi","Api","getItem","params","apiUrl","generateQueryString","fetch","url","method","credentials","then","res","_returnJson","searchParams","URLSearchParams","keyParam","key","set","toString","createItem","saveData","headers","body","JSON","stringify","name","description","ok","json","Promise","reject","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAGA,MAAMC,GAAN,CAAU;AAAA;AAAA,SAGNC,OAHM,GAGKC,MAAD,IAAY;AAClB,YAAMC,MAAM,GAAG,KAAKC,mBAAL,CAAyBF,MAAzB,CAAf;AAEA,aAAOG,KAAK,CAAE,GAAEN,kBAAkB,CAACO,GAAI,IAAGH,MAAO,EAArC,EAAwC;AAChDI,QAAAA,MAAM,EAAE,KADwC;AAEhDC,QAAAA,WAAW,EAAE;AAFmC,OAAxC,CAAL,CAIFC,IAJE,CAIIC,GAAD,IAAS,KAAKC,WAAL,CAAiBD,GAAjB,CAJZ,CAAP;AAKH,KAXK;;AAAA,SAaNN,mBAbM,GAaiBF,MAAD,IAAY;AAE9B,UAAIU,YAAY,GAAG,IAAIC,eAAJ,EAAnB;;AAEA,WAAK,IAAIC,QAAT,IAAqBZ,MAArB,EAA6B;AACzB,YAAIY,QAAQ,KAAK,QAAjB,EAA2B;AACvB,eAAK,IAAIC,GAAT,IAAgBb,MAAM,CAACY,QAAD,CAAtB,EAAkC;AAC9BF,YAAAA,YAAY,CAACI,GAAb,CAAiB,YAAUD,GAA3B,EAAgCb,MAAM,CAACY,QAAD,CAAN,CAAiBC,GAAjB,CAAhC;AACH;AACJ,SAJD,MAIM;AACFH,UAAAA,YAAY,CAACI,GAAb,CAAiBF,QAAjB,EAA2BZ,MAAM,CAACY,QAAD,CAAjC;AACH;AAEJ;;AACD,aAAOF,YAAY,CAACK,QAAb,EAAP;AACH,KA5BK;;AAAA,SA8BNC,UA9BM,GA8BQC,QAAD,IAAc;AACvB,aAAOd,KAAK,CAACN,kBAAkB,CAACO,GAApB,EAAyB;AACjCC,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,WAAW,EAAE,SAFoB;AAGjCY,QAAAA,OAAO,EAAErB,kBAAkB,CAACqB,OAHK;AAIjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,IAAI,EAAEL,QAAQ,CAACK,IADE;AAEjBC,UAAAA,WAAW,EAAEN,QAAQ,CAACM,WAFL;AAGjBvB,UAAAA,MAAM,EAAEiB,QAAQ,CAACjB;AAHA,SAAf;AAJ2B,OAAzB,CAAL,CAWFO,IAXE,CAWIC,GAAD,IAAS,KAAKC,WAAL,CAAiBD,GAAjB,CAXZ,CAAP;AAYH,KA3CK;;AAAA,SAyDNC,WAzDM,GAyDSD,GAAD,IAAS;AACnB,UAAIA,GAAG,CAACgB,EAAR,EAAY;AACR,eAAOhB,GAAG,CAACiB,IAAJ,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUnB,GAAG,CAACoB,MAAO,EAArC,CAAP;AACH,KA9DK;AAAA;;AAAA;;AAiEV,eAAe9B,GAAf","sourcesContent":["import React from 'react';\nimport defaultDataMainApi from '../../const/const-api'\n\n\nclass Api {\n\n\n    getItem = (params) => {\n        const apiUrl = this.generateQueryString(params);\n\n        return fetch(`${defaultDataMainApi.url}?${apiUrl}`, {\n            method: \"GET\",\n            credentials: 'include',\n        })\n            .then((res) => this._returnJson(res))\n    };\n\n    generateQueryString = (params) => {\n\n        let searchParams = new URLSearchParams();\n\n        for (let keyParam in params) {\n            if (keyParam === \"params\") {\n                for (let key in params[keyParam]) {\n                    searchParams.set(\"params.\"+key, params[keyParam][key])\n                }\n            } else{\n                searchParams.set(keyParam, params[keyParam])\n            }\n\n        }\n        return searchParams.toString();\n    };\n\n    createItem = (saveData) => {\n        return fetch(defaultDataMainApi.url, {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: defaultDataMainApi.headers,\n            body: JSON.stringify({\n                name: saveData.name,\n                description: saveData.description,\n                params: saveData.params,\n\n            }),\n        })\n            .then((res) => this._returnJson(res));\n    };\n\n\n    // removeItem = (id) => {\n    //     return fetch(`${defaultDataMainApi.url}/${id}`, {\n    //         method: 'DELETE',\n    //         headers: defaultDataMainApi.headers,\n    //\n    //     })\n    //         .then((res) => this._returnJson(res))\n    //\n    // };\n\n\n    _returnJson = (res) => {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}